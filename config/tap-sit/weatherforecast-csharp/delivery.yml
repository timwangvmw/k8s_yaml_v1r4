apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: weatherforecast-csharp
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: weatherforecast-csharp
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/component: run
    carto.run/workload-name: weatherforecast-csharp
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "1"
        conventions.carto.run/applied-conventions: |-
          appliveview-sample/app-live-view-appflavour-check
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/app-live-view-appflavour-check
        developer.conventions/target-containers: workload
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"annotations":{},"labels":{"app.kubernetes.io/part-of":"weatherforecast-csharp","apps.tanzu.vmware.com/has-tests":"true","apps.tanzu.vmware.com/workload-type":"web"},"name":"weatherforecast-csharp","namespace":"tap-sit"},"spec":{"params":[{"name":"testing_pipeline_matching_labels","value":{"apps.tanzu.vmware.com/pipeline":"dotnet-test"}},{"name":"annotations","value":{"autoscaling.knative.dev/minScale":"1"}}],"source":{"git":{"ref":{"branch":"main"},"url":"https://github.com/timwangvmw/weatherforecast-csharp.git"}}}}
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: weatherforecast-csharp
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: weatherforecast-csharp
    spec:
      containers:
      - image: harbor.lab.tw/tap-ap/weatherforecast-csharp-tap-sit@sha256:23c36c46574fa408baa2c430e4f1491349cc24067fd45128b5e468affe589a74
        name: workload
        resources: {}
        securityContext:
          runAsUser: 1000
      serviceAccountName: workload-sa

